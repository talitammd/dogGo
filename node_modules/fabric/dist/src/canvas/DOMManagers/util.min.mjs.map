{"version":3,"file":"util.min.mjs","sources":["../../../../src/canvas/DOMManagers/util.ts"],"sourcesContent":["import { NONE } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\nimport { setStyle } from '../../util/dom_style';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1,\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport function allowTouchScrolling(element: HTMLElement, allow: boolean) {\n  const touchAction = allow ? 'manipulation' : NONE;\n  setStyle(element, {\n    'touch-action': touchAction,\n    '-ms-touch-action': touchAction,\n  });\n}\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>,\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 };\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle: CSSStyleDeclaration =\n    getWindowFromElement(element)?.getComputedStyle(element, null) ||\n    ({} as CSSStyleDeclaration);\n  offset.left += parseInt(elemStyle.borderLeftWidth, 10) || 0;\n  offset.top += parseInt(elemStyle.borderTopWidth, 10) || 0;\n  offset.left += parseInt(elemStyle.paddingLeft, 10) || 0;\n  offset.top += parseInt(elemStyle.paddingTop, 10) || 0;\n\n  let box = { left: 0, top: 0 };\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n"],"names":["setCanvasDimensions","el","ctx","_ref","width","height","retinaScaling","arguments","length","undefined","setAttribute","toString","scale","allowTouchScrolling","element","allow","touchAction","NONE","setStyle","setCSSDimensions","_ref2","style","concat","getElementOffset","_getWindowFromElement","doc","getDocumentFromElement","offset","left","top","elemStyle","getWindowFromElement","getComputedStyle","parseInt","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","box","docElem","documentElement","getBoundingClientRect","scrollLeftTop","getScrollLeftTop","clientLeft","clientTop","makeElementUnselectable","onselectstart","userSelect"],"mappings":"4NASO,MAAMA,EAAsB,SACjCC,EACAC,EAA6BC,GAG1B,IAFHC,MAAEA,EAAKC,OAAEA,GAAeF,EACxBG,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAEhBN,EAAGG,MAAQA,EACXH,EAAGI,OAASA,EACRC,EAAgB,IAClBL,EAAGS,aAAa,SAAUN,EAAQE,GAAeK,YACjDV,EAAGS,aAAa,UAAWL,EAASC,GAAeK,YACnDT,EAAIU,MAAMN,EAAeA,GAE7B,EAEO,SAASO,EAAoBC,EAAsBC,GACxD,MAAMC,EAAcD,EAAQ,eAAiBE,EAC7CC,EAASJ,EAAS,CAChB,eAAgBE,EAChB,mBAAoBA,GAExB,OAOaG,EAAmBA,CAC9BlB,EAAemB,KAEZ,IADHhB,MAAEA,EAAKC,OAAEA,GAAgCe,EAEzChB,IAAUH,EAAGoB,MAAMjB,MAAyB,iBAAVA,EAAkBkB,GAAAA,OAAMlB,EAAK,MAAOA,GACtEC,IACGJ,EAAGoB,MAAMhB,OAA2B,iBAAXA,EAAmBiB,GAAAA,OAAMjB,EAAM,MAAOA,EAAO,EAQpE,SAASkB,EAAiBT,GAAsB,IAAAU,EACrD,MAAMC,EAAMX,GAAWY,EAAuBZ,GAC5Ca,EAAS,CAAEC,KAAM,EAAGC,IAAK,GAE3B,IAAKJ,EACH,OAAOE,EAET,MAAMG,GACyBN,QAA7BA,EAAAO,EAAqBjB,cAAQU,SAA7BA,EAA+BQ,iBAAiBlB,EAAS,QACxD,GACHa,EAAOC,MAAQK,SAASH,EAAUI,gBAAiB,KAAO,EAC1DP,EAAOE,KAAOI,SAASH,EAAUK,eAAgB,KAAO,EACxDR,EAAOC,MAAQK,SAASH,EAAUM,YAAa,KAAO,EACtDT,EAAOE,KAAOI,SAASH,EAAUO,WAAY,KAAO,EAEpD,IAAIC,EAAM,CAAEV,KAAM,EAAGC,IAAK,GAE1B,MAAMU,EAAUd,EAAIe,qBACyB,IAAlC1B,EAAQ2B,wBACjBH,EAAMxB,EAAQ2B,yBAGhB,MAAMC,EAAgBC,EAAiB7B,GAEvC,MAAO,CACLc,KACEU,EAAIV,KAAOc,EAAcd,MAAQW,EAAQK,YAAc,GAAKjB,EAAOC,KACrEC,IAAKS,EAAIT,IAAMa,EAAcb,KAAOU,EAAQM,WAAa,GAAKlB,EAAOE,IAEzE,CAOO,SAASiB,EAAwBhC,GAKtC,YAJqC,IAA1BA,EAAQiC,gBACjBjC,EAAQiC,cAAgB,KAAM,GAEhCjC,EAAQO,MAAM2B,WAAa/B,EACpBH,CACT"}