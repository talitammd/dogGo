{"version":3,"file":"regex.mjs","sources":["../../../../src/util/path/regex.ts"],"sourcesContent":["import { reNum } from '../../parser/constants';\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n */\nconst p = `(${reNum})`;\n\nconst reMoveToCommand = `(M) (?:${p} ${p} ?)+`;\n\nconst reLineCommand = `(L) (?:${p} ${p} ?)+`;\n\nconst reHorizontalLineCommand = `(H) (?:${p} ?)+`;\n\nconst reVerticalLineCommand = `(V) (?:${p} ?)+`;\n\nconst reClosePathCommand = String.raw`(Z)\\s*`;\n\nconst reCubicCurveCommand = `(C) (?:${p} ${p} ${p} ${p} ${p} ${p} ?)+`;\n\nconst reCubicCurveShortcutCommand = `(S) (?:${p} ${p} ${p} ${p} ?)+`;\n\nconst reQuadraticCurveCommand = `(Q) (?:${p} ${p} ${p} ${p} ?)+`;\n\nconst reQuadraticCurveShortcutCommand = `(T) (?:${p} ${p} ?)+`;\n\nconst reArcCommand = `(A) (?:${p} ${p} ${p} ([01]) ?([01]) ${p} ${p} ?)+`;\n\nexport const rePathCommand =\n  `(?:(?:${reMoveToCommand})` +\n  `|(?:${reLineCommand})` +\n  `|(?:${reHorizontalLineCommand})` +\n  `|(?:${reVerticalLineCommand})` +\n  `|(?:${reClosePathCommand})` +\n  `|(?:${reCubicCurveCommand})` +\n  `|(?:${reCubicCurveShortcutCommand})` +\n  `|(?:${reQuadraticCurveCommand})` +\n  `|(?:${reQuadraticCurveShortcutCommand})` +\n  `|(?:${reArcCommand}))`;\n"],"names":["p","concat","reNum","reMoveToCommand","reLineCommand","reHorizontalLineCommand","reVerticalLineCommand","reClosePathCommand","String","raw","_templateObject","_taggedTemplateLiteral","reCubicCurveCommand","reCubicCurveShortcutCommand","reQuadraticCurveCommand","reQuadraticCurveShortcutCommand","reArcCommand","rePathCommand"],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA,MAAMA,CAAC,GAAA,GAAA,CAAAC,MAAA,CAAOC,KAAK,EAAG,GAAA,CAAA,CAAA;AAEtB,MAAMC,eAAe,aAAAF,MAAA,CAAaD,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAE9C,MAAMI,aAAa,aAAAH,MAAA,CAAaD,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAE5C,MAAMK,uBAAuB,GAAA,SAAA,CAAAJ,MAAA,CAAaD,CAAC,EAAM,MAAA,CAAA,CAAA;AAEjD,MAAMM,qBAAqB,GAAA,SAAA,CAAAL,MAAA,CAAaD,CAAC,EAAM,MAAA,CAAA,CAAA;AAE/C,MAAMO,kBAAkB,GAAGC,MAAM,CAACC,GAAG,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,CAAQ,CAAA,OAAA,CAAA,EAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAE7C,MAAMC,mBAAmB,GAAAX,SAAAA,CAAAA,MAAA,CAAaD,CAAC,OAAAC,MAAA,CAAID,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAID,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAEtE,MAAMa,2BAA2B,GAAAZ,SAAAA,CAAAA,MAAA,CAAaD,CAAC,OAAAC,MAAA,CAAID,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAID,CAAC,OAAAC,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAEpE,MAAMc,uBAAuB,GAAAb,SAAAA,CAAAA,MAAA,CAAaD,CAAC,OAAAC,MAAA,CAAID,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAID,CAAC,OAAAC,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAEhE,MAAMe,+BAA+B,aAAAd,MAAA,CAAaD,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAE9D,MAAMgB,YAAY,aAAAf,MAAA,CAAaD,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAA,GAAA,CAAA,CAAAC,MAAA,CAAID,CAAC,sBAAAC,MAAA,CAAmBD,CAAC,EAAAC,GAAAA,CAAAA,CAAAA,MAAA,CAAID,CAAC,EAAM,MAAA,CAAA,CAAA;AAElE,MAAMiB,aAAa,GACxB,QAAA,CAAAhB,MAAA,CAASE,eAAe,EAAAF,GAAAA,CAAAA,GAAAA,MAAAA,CAAAA,MAAA,CACjBG,aAAa,MAAG,GAAAH,MAAAA,CAAAA,MAAA,CAChBI,uBAAuB,EAAG,GAAA,CAAA,GAAA,MAAA,CAAAJ,MAAA,CAC1BK,qBAAqB,EAAG,GAAA,CAAA,GAAA,MAAA,CAAAL,MAAA,CACxBM,kBAAkB,EAAG,GAAA,CAAA,GAAA,MAAA,CAAAN,MAAA,CACrBW,mBAAmB,EAAA,GAAA,CAAG,UAAAX,MAAA,CACtBY,2BAA2B,EAAA,GAAA,CAAG,GAAAZ,MAAAA,CAAAA,MAAA,CAC9Ba,uBAAuB,EAAA,GAAA,CAAG,GAAAb,MAAAA,CAAAA,MAAA,CAC1Bc,+BAA+B,MAAG,GAAAd,MAAAA,CAAAA,MAAA,CAClCe,YAAY,EAAI,IAAA;;;;"}