import{multiplyTransformMatrices as i}from"../util/misc/matrix.min.mjs";import{parseUnit as r}from"../util/misc/svgParsing.min.mjs";import{parseTransformAttribute as t}from"./parseTransformAttribute.min.mjs";import{FILL as e,STROKE as s,NONE as n,LEFT as a,RIGHT as o,CENTER as m}from"../constants.min.mjs";function f(f,l,p,c){const u=Array.isArray(l);let x,g=l;if(f!==e&&f!==s||l!==n){if("strokeUniform"===f)return"non-scaling-stroke"===l;if("strokeDashArray"===f)g=l===n?null:l.replace(/,/g," ").split(/\s+/).map(parseFloat);else if("transformMatrix"===f)g=p&&p.transformMatrix?i(p.transformMatrix,t(l)):t(l);else if("visible"===f)g=l!==n&&"hidden"!==l,p&&!1===p.visible&&(g=!1);else if("opacity"===f)g=parseFloat(l),p&&void 0!==p.opacity&&(g*=p.opacity);else if("textAnchor"===f)g="start"===l?a:"end"===l?o:m;else if("charSpacing"===f)x=r(l,c)/c*1e3;else if("paintFirst"===f){const i=l.indexOf(e),r=l.indexOf(s);g=e,(i>-1&&r>-1&&r<i||-1===i&&r>-1)&&(g=s)}else{if("href"===f||"xlink:href"===f||"font"===f)return l;if("imageSmoothing"===f)return"optimizeQuality"===l;x=u?l.map(r):r(l,c)}}else g="";return!u&&isNaN(x)?g:x}export{f as normalizeValue};
//# sourceMappingURL=normalizeValue.min.mjs.map
